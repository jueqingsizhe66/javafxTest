package org.data.Entity.JFinal;

import io.vproxy.vfx.ui.table.RowInformer;
import io.vproxy.vfx.ui.table.VTableCellPane;
import io.vproxy.vfx.ui.table.VTableColumn;
import javafx.geometry.Insets;
import javafx.scene.Node;
import javafx.scene.control.TextField;
import javafx.scene.layout.Background;
import javafx.scene.layout.BackgroundFill;
import javafx.scene.layout.CornerRadii;
import javafx.scene.paint.Color;
import org.data.Entity.JFinal.base.BaseStandardenergyupdate;

import java.util.HashSet;
import java.util.Set;

import static cn.hutool.core.util.RandomUtil.randomString;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Standardenergyupdate extends BaseStandardenergyupdate<Standardenergyupdate> {

    private RowInformer informer;

    /**
     * 需要创建好Node
     */
    private Node stdCodeNode=getNodeStdCode();
    /**
     * 标准标号Node
     */
    public Node getNodeStdCode() {
        var ret = new TextField(this.getStdCode());
        ret.setOnAction(e -> {
            if ("red".equals(ret.getText())) {
                cells.forEach(c -> c.setBg(new Background(
                        new BackgroundFill(Color.RED,
                                CornerRadii.EMPTY, Insets.EMPTY)
                )));
            } else {
                cells.forEach(VTableCellPane::resetBg);
            }
        });
        return ret;
    }

    /**
     * 标准标号
     */
    public void setNodeStdCode(Node nodeF) {
        this.stdCodeNode = nodeF;
        informer.informRowUpdate();
    }

    private final Set<VTableCellPane<BaseStandardenergyupdate>> cells = new HashSet<>();
    @Override
    public void setCell(VTableColumn<BaseStandardenergyupdate, ?> col, VTableCellPane<BaseStandardenergyupdate> pane) {
        cells.add(pane);

    }

    @Override
    public void setRowInformer(RowInformer rowInformer) {
        this.informer = rowInformer;

    }
}

